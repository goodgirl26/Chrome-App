내 페이지에서 자바스크립트로 선택한것은 모두 객체가 된다.

console.log(document)를 하면
document객체 안에는 모든 html요소들이 다 들어가있다.


이벤트란,
웹사이트에서 일어나는 일들을 말한다.





classList.toggle(클래스A)

toggle은 클래스A가 있는지 없는지 검사해서
있으면 삭제하고 없으면 추가한다.



local storage는 작은 정보를 너의 유저컴퓨터에 저장하는 방법이다.

작은 자바스크립트 정보들을 넣어 놓는 것이다.

우리의 경우에는 사람의 이름!




Local Storage는 URL을 기초로 동작한다.
=> 이 웹사이트는 facebook이 거기에 넣은 localstorage를 가져올순없다.


local Stroage에는 자바스크립트의 데이터를 저장할 수 없다.
오직 string만 저장할 수 있다.
==. 자바스크립트는 local storage에 있는 모든 데이터를 string으로 저장
하려고 한다.
==> JSON.stringify는 자바스크립트 object를 string으로 바꿔준다.





Math.random()에서 5까지의 임의의 수는
Math.random() * 5로 쓴다.

소숫점 아래를 버리기 위해선,
Math.floor를 쓰면 된다.
Math.ceil()은 올림
Math.floor()은 버림






이미지 로딩이 안되는 이유는 API에서 나온게 아니기 때문이야.
지금 우리는 원격으로 하는 것이기 때문에
image.addEventListener("loadend", handleImgLoad);를 할 필요가 없어.
만약 api로 하는 것이면
 image.addEventListener("loadend", handleImgLoad); 를 해야된다.


API는 다른 서버로부터 손쉽게 데이터를 가져올 수 있는 수단이다.

오직 데이터만 가져오는 것이다.

이런 API를 제공하는 해당 웹사이트를 통해 데이터를 얻을 수가 있는데,
우리가 가져올 것은 데이터 뿐이야.
디자인이나 다른 것은 필요하지 않엉

so, 이런 api는 특정 웹사이트로부터 데이터를 얻거나/
컴퓨터끼리 소통하기 위해 고안된 것이야

그것이, api에 아무 디자인이 필요없는 이유다.

Javascript는 웹사이트로 Request를 보내고, 응답을 통해서 데이터를 얻을 수 있다.
가져온 데이터를 refresh없이도 나의 웹사이트에 적용시킬 수 있다.
javascript가 보이지 않는 곳에서 계속 데이터를 가져오고있기 때문이다
super awesome!!


데이터를 가져오는 방법은 아주 쉬워 . 
fetch를 사용하면 되!

fetch()안에는 가져올 데이터가 들어가면 되.
앞에 https://를 넣어주고
꼭!! 따옴표가 아닌 백틱을 사용할 것!


fetch()다음에 이어서 then이라는 메소드를 호출해 줄 것이다.
이 then은 함수를 하나 호출할 건데, 언제할거냐면,
데이터가 우리한테 넘어왔을때이다.
왜냐하면, 데이터가 들어오는데 시간이 좀 걸리는 경우가 있기 때문이다.

그러니까, 데이터가 완전히 들어온 다음 호출하는 것이다.

이렇게 하지 않고 fetch밑에 새로운 함수를 작성해버리면,
fetch가 정상적으로 완료되지 않고 실행되어버릴 수 있기 때문이다.

javascript에서 뭔가가 끝나길 기다리는 방법은,
then을 사용하는 것이지.




































